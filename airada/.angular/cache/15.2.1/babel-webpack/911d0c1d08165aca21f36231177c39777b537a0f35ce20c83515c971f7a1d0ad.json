{"ast":null,"code":"import { PROJECTS } from './projects';\nexport const PROJECT_SKILLS = [\"platform_windows\", \"platform_macos\", \"platform_ios\", \"platform_android\", \"language_htmlcss\", \"language_typescript\", \"skill_angular\", \"skill_bootstrap\", \"skill_design\"];\nfunction mapProjectSkills() {\n  let project_skills = new Map();\n  for (let i = 0; i < PROJECTS.length; i++) {\n    let skills = PROJECTS[i].skills;\n    let id = PROJECTS[i].id;\n    if (!project_skills.has(id)) {\n      project_skills.set(id, skills);\n    } else {\n      continue;\n    }\n  }\n  return project_skills;\n}\nfunction valuesToKeys(map) {\n  let remapped = new Map();\n  return remapped;\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,cAAc,GAAc,CAAC,kBAAkB,EAAC,gBAAgB,EAAC,cAAc,EAAC,kBAAkB,EAAC,kBAAkB,EAClI,qBAAqB,EAAC,eAAe,EAAC,iBAAiB,EAAC,cAAc,CAAC;AAGvE,SAASC,gBAAgB;EACrB,IAAIC,cAAc,GAA0B,IAAIC,GAAG,EAAE;EAErD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIE,MAAM,GAAGP,QAAQ,CAACK,CAAC,CAAC,CAACE,MAAM;IAC/B,IAAIC,EAAE,GAAGR,QAAQ,CAACK,CAAC,CAAC,CAACG,EAAE;IAExB,IAAI,CAACL,cAAc,CAACM,GAAG,CAACD,EAAE,CAAC,EAAC;MAC3BL,cAAc,CAACO,GAAG,CAACF,EAAE,EAAED,MAAM,CAAC;KAC9B,MAAM;MACN;;;EAIJ,OAAOJ,cAAc;AACzB;AAEA,SAASQ,YAAY,CAACC,GAA0B;EAC5C,IAAIC,QAAQ,GAA0B,IAAIT,GAAG,EAAE;EAE/C,OAAOS,QAAQ;AACnB","names":["PROJECTS","PROJECT_SKILLS","mapProjectSkills","project_skills","Map","i","length","skills","id","has","set","valuesToKeys","map","remapped"],"sourceRoot":"","sources":["D:\\Projects\\WebDev\\airada\\airada.github.io\\airada\\src\\app\\project-skills.function.ts"],"sourcesContent":["import { Project } from './project';\r\nimport { PROJECTS } from './projects';\r\n\r\nexport const PROJECT_SKILLS: string[] =  [\"platform_windows\",\"platform_macos\",\"platform_ios\",\"platform_android\",\"language_htmlcss\",\r\n\"language_typescript\",\"skill_angular\",\"skill_bootstrap\",\"skill_design\"];\r\n\r\n\r\nfunction mapProjectSkills(): Map<number, string[]> {\r\n    let project_skills: Map<number, string[]> = new Map();\r\n\r\n    for (let i = 0; i < PROJECTS.length; i++) {\r\n        let skills = PROJECTS[i].skills;\r\n        let id = PROJECTS[i].id;\r\n\r\n       if (!project_skills.has(id)){\r\n        project_skills.set(id, skills);\r\n       } else {\r\n        continue;\r\n       }\r\n    }\r\n\r\n    return project_skills;\r\n}\r\n\r\nfunction valuesToKeys(map: Map<number, string[]>): Map<string, number[]> {\r\n    let remapped: Map<string, number[]> = new Map();\r\n\r\n    return remapped;\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}