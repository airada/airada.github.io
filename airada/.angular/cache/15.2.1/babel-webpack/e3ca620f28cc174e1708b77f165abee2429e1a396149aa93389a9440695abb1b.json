{"ast":null,"code":"import _asyncToGenerator from \"D:/Projects/WebDev/airada/airada.github.io/airada/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classPrivateFieldInitSpec from \"D:/Projects/WebDev/airada/airada.github.io/airada/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"D:/Projects/WebDev/airada/airada.github.io/airada/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport _classPrivateFieldSet from \"D:/Projects/WebDev/airada/airada.github.io/airada/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js\";\nvar _queue = /*#__PURE__*/new WeakMap();\nexport class Typewriter {\n  constructor(element, {\n    loop = false,\n    typingSpeed = 50,\n    deletingSpeed = 50\n  } = {}) {\n    _classPrivateFieldInitSpec(this, _queue, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _queue, []);\n    this.element = element;\n    this.loop = loop;\n    this.typingSpeed = typingSpeed;\n    this.deletingSpeed = deletingSpeed;\n  }\n  typeString(string) {\n    _classPrivateFieldGet(this, _queue).push(() => {\n      return new Promise((resolve, reject) => {\n        console.log(string);\n        resolve();\n      });\n    });\n    return this;\n  }\n  deleteChars(number) {\n    return this;\n  }\n  deleteAll(deleteSpeed = this.deletingSpeed) {\n    return this;\n  }\n  pauseFor(duration) {\n    return this;\n  }\n  start() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      for (let cb of _classPrivateFieldGet(_this, _queue)) {\n        yield cb();\n      }\n      return _this;\n    })();\n  }\n}","map":{"version":3,"mappings":";;;;;AAEA,OAAM,MAAOA,UAAU;EAOnBC,YAAYC,OAAoB,EAAE;IAACC,IAAI,GAAG,KAAK;IAAEC,WAAW,GAAG,EAAE;IAAEC,aAAa,GAAG;EAAE,CAAC,GAAG,EAAE;IAAA;MAAA;MAAA;IAAA;IAN3F,oCAAsB,EAAE;IAOpB,IAAI,CAACH,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,aAAa,GAAGA,aAAa;EACtC;EAEAC,UAAU,CAACC,MAAc;IACrB,0BAAI,UAAQC,IAAI,CAAC,MAAK;MAClB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;QACnCC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;QACnBG,OAAO,EAAE;MACb,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EAEAI,WAAW,CAACC,MAAc;IAEtB,OAAO,IAAI;EACf;EAEAC,SAAS,CAACC,WAAW,GAAG,IAAI,CAACZ,aAAa;IACtC,OAAO,IAAI;EACf;EAEAa,QAAQ,CAACC,QAAgB;IACrB,OAAO,IAAI;EACf;EAEMC,KAAK;IAAA;IAAA;MACP,KAAK,IAAIC,EAAE,0BAAI,KAAI,WAAS;QACxB,MAAMA,EAAE,EAAE;;MAEd,OAAO,KAAI;IAAC;EAChB","names":["Typewriter","constructor","element","loop","typingSpeed","deletingSpeed","typeString","string","push","Promise","resolve","reject","console","log","deleteChars","number","deleteAll","deleteSpeed","pauseFor","duration","start","cb"],"sourceRoot":"","sources":["D:\\Projects\\WebDev\\airada\\airada.github.io\\airada\\src\\app\\Typewriter.ts"],"sourcesContent":["type QueueItem = () => Promise<void>\r\n\r\nexport class Typewriter {\r\n    #queue: QueueItem[] = [];\r\n    element: HTMLElement;\r\n    loop: boolean;\r\n    typingSpeed: number;\r\n    deletingSpeed: number;\r\n\r\n    constructor(element: HTMLElement, {loop = false, typingSpeed = 50, deletingSpeed = 50} = {}) {\r\n        this.element = element;\r\n        this.loop = loop;\r\n        this.typingSpeed = typingSpeed;\r\n        this.deletingSpeed = deletingSpeed;\r\n    }\r\n\r\n    typeString(string: string){\r\n        this.#queue.push(() => {\r\n            return new Promise((resolve, reject) => {\r\n                console.log(string);\r\n                resolve();\r\n            })\r\n        });\r\n        return this;\r\n    }\r\n\r\n    deleteChars(number: number){\r\n\r\n        return this;\r\n    }\r\n\r\n    deleteAll(deleteSpeed = this.deletingSpeed){\r\n        return this;\r\n    }\r\n\r\n    pauseFor(duration: number) {\r\n        return this;\r\n    }\r\n\r\n    async start() {\r\n        for (let cb of this.#queue) {\r\n            await cb();\r\n        }\r\n        return this;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}